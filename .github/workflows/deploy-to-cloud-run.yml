
name: Build and Deploy to Google Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1 
  SERVICE_NAME: bookings 
  ARTIFACT_REGISTRY_REPO: bookings-repo 
  IMAGE_NAME: bookings-app 

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Required for Workload Identity Federation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      - name: Build Docker image
        run: |
          docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
                       -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:latest .

      - name: Push Docker image to Artifact Registry
        run: |
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:latest

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.GAR_LOCATION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          platform: managed
          allow_unauthenticated: true

      - name: Show Deployed URL Test # Line 59 (approx)
        run: echo "Deployment URL will appear here." # Line 60 (approx) - Simplified run command

# How to set up GitHub Secrets:
# 1. GCP_PROJECT_ID: Your Google Cloud Project ID.
# 2. GCP_WORKLOAD_IDENTITY_PROVIDER: The full identifier of your Workload Identity Provider.
#    Format: projects/YOUR_PROJECT_NUMBER/locations/global/workloadIdentityPools/YOUR_POOL_ID/providers/YOUR_PROVIDER_ID
# 3. GCP_SERVICE_ACCOUNT: The email address of the Google Cloud Service Account that GitHub Actions will impersonate.
#    This service account needs roles like:
#    - Artifact Registry Writer (roles/artifactregistry.writer) - to push images
#    - Cloud Run Developer (roles/run.developer) - to deploy services
#    - Service Account User (roles/iam.serviceAccountUser) - to impersonate this service account
#
# Before running:
# - Ensure Artifact Registry API is enabled in your GCP project.
# - Ensure Cloud Run API is enabled in your GCP project.
# - Create an Artifact Registry repository named (as per env vars) in the specified GAR_LOCATION.
# - Configure Workload Identity Federation between GitHub Actions and your GCP project.
