# This workflow builds and deploys a Next.js application to Google Cloud Run
# when changes are pushed to the main branch.

name: Deploy to Cloud Run

on:
  push:
    branches:
      - main # Or your specific deployment branch

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }} # Should be 'coffeespot-booking-461302'
  GAR_LOCATION: us-central1 # Google Cloud region for Artifact Registry and Cloud Run
  SERVICE_NAME: coffeespot-booking-service # Name of your Cloud Run service
  ARTIFACT_REGISTRY_REPO: coffeespot-booking-repo # Name of your Artifact Registry repository
  IMAGE_NAME: coffeespot-booking-app # Name of your Docker image

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write' # Required for Workload Identity Federation

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }} # e.g., projects/182184842256/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider
          service_account: 'bookings-github-actions-deploy@coffeespot-booking-461302.iam.gserviceaccount.com'
          audience: '//iam.googleapis.com/projects/182184842256/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider' # Explicit URL-style audience

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev --quiet

      - name: Build Docker image
        run: |
          docker build \
            -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:latest \
            .

      - name: Push Docker image to Artifact Registry
        run: |
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:latest

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.GAR_LOCATION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          platform: 'managed'
          allow_unauthenticated: true # Set to false if you want to control access via IAM
          env_vars: |
            NODE_ENV=production
            PORT=3000

      - name: Show Deployed URL Test
        run: echo "Deployment URL will appear here (once steps.deploy.outputs.url is confirmed working)."
